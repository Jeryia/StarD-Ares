#!perl
use strict;
use warnings;

use lib("./lib");
use ares_core;
use ares_player;
use ares_game;

use lib("../../lib/perl");
use Starmade::Message;
use Starmade::Player;
use Stard::Log;

$|=1;

ares_setup_run_env('.');

my $ares_player_state = "./State/Players";

main(@ARGV);
exit 0;
##############################################




sub main {
	my $player = $_[0];

	if (ares_get_game_state() eq '' || ares_get_game_state() eq 'complete') {
		exit 0;
	}

	my $lock_fh = ares_player_lock($player);

	if (!$lock_fh) {
		exit 0;
	}
	if (!ares_get_player_faction($player)) {
		ares_new_player($player);
	}
	else {
		ares_fix_faction($player);
	}

	if (-e "$ares_player_state/$player.dead") {
		# Put them home. safeguard against using opposing faction base as spawn.
		starmade_change_sector_for($player, ares_get_faction_home(ares_get_player_faction($player)));
		unlink("$ares_player_state/$player.dead");
	}

	ares_player_unlock($lock_fh);
}

